version: '3.9'

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes: 
      - postgres_data:/var/lib/postgresql/data

  spotify_etl:
    build:
      context: .
    container_name: spotify_etl
    env_file:
      - .env
    volumes:
      - .:/app
      - ./streamlit/secrets:/app/secrets:ro
    command: python src/main.py
    depends_on:
      - snowflake

  streamlit:
    build:
      context: ./streamlit
    container_name: streamlit_app
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    env_file:
      - ./streamlit/.env
    volumes:
      - ./streamlit:/app
      - ./streamlit/secrets:/app/secrets:ro
    depends_on:
      - snowflake  

  airflow-init:
    image: apache/airflow:2.9.1
    container_name: airflow_init
    depends_on:
      - postgres
    env_file:
      - ./airflow/.env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./streamlit/secrets:/opt/airflow/secrets:ro
    entrypoint: >
      bash -c "airflow db migrate &&
               airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"


  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: airflow_webserver
    depends_on:
      - postgres
      - airflow-scheduler
    restart: always
    env_file:
      - ./airflow/.env
    volumes:
      - ./:/opt/spotify
      - ./dbt:/usr/app
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./streamlit/secrets:/opt/airflow/secrets:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: airflow_scheduler
    depends_on:
      - postgres
    restart: always
    env_file:
      - ./airflow/.env
    volumes:
      - ./:/opt/spotify
      - ./dbt:/usr/app
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./streamlit/secrets:/opt/airflow/secrets:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: scheduler

  dbt:
    build:
      context: ./dbt
    container_name: dbt_runner
    env_file:
      - ./airflow/.env
    volumes:
      - ./dbt:/usr/app
      - ./streamlit/secrets:/app/secrets:ro
    working_dir: /usr/app
    entrypoint: [ "tail", "-f", "/dev/null" ]  # Keeps container running for manual exec

  snowflake:
    image: alpine:latest  # Snowflake is cloud-hosted, this is a dummy placeholder for dependency resolution
    container_name: snowflake
    command: ["echo", "Snowflake is in the cloud!"]

volumes:
  postgres_data:

networks:
  default:
    name: spotify_net
